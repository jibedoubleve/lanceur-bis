<ui:FluentWindow
    x:Class="Lanceur.Ui.WPF.Views.MainView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:tray="http://schemas.lepo.co/wpfui/2022/xaml/tray"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    x:Name="Self"
    Width="720"
    MinHeight="0"
    WindowBackdropType="{Binding WindowBackdropStyle}"
    ExtendsContentIntoTitleBar="true"
    AllowDrop="True"
    BorderBrush="{DynamicResource AccentTextFillColorTertiaryBrush}"
    BorderThickness=".25"
    FocusManager.FocusedElement="{Binding ElementName=QueryTextBox}"
    Loaded="OnLoaded"
    LostKeyboardFocus="OnLostKeyboardFocus"
    MouseDown="OnMouseDown"
    MouseUp="OnMouseUp"
    PreviewKeyDown="OnPreviewKeyDown"
    ResizeMode="NoResize"
    ShowInTaskbar="False"
    SizeToContent="Height"
    Topmost="True"
    WindowStyle="None"
    mc:Ignorable="d">
    <Window.Resources>
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="{DynamicResource ApplicationBackgroundBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
            <Setter Property="FontSize" Value="24" />
            <Setter Property="Margin" Value="8" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="Opacity" Value="1" />
            <Setter Property="BorderThickness" Value=".3" />
            <Setter Property="CaretBrush" Value="{DynamicResource TextFillColorPrimaryBrush}" />
        </Style>
    </Window.Resources>
    <Grid>
        <Grid Background="{DynamicResource ApplicationBackgroundBrush}" Opacity=".01" />
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!--  QUERY BOXES  -->
            <StackPanel>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <!--  QUERY BOX  -->
                    <TextBox
                        CharacterCasing="Lower"
                        x:Name="QueryTextBox"
                        Panel.ZIndex="2"
                        BorderThickness="0"
                        Background="Transparent"
                        KeyDown="OnPreviewKeyDown"
                        Text="{Binding Query, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.InputBindings>
                            <KeyBinding
                                Key="Enter"
                                Command="{Binding ExecuteCommand}"
                                CommandParameter="{StaticResource False}" />
                            <KeyBinding
                                Key="Enter"
                                Command="{Binding ExecuteCommand}"
                                CommandParameter="{StaticResource True}"
                                Modifiers="Control" />
                            <!-- This should open the source directory whenever possible -->
                            <KeyBinding
                                Key="Enter"
                                Command="{Binding OpenDirectoryCommand}"
                                CommandParameter="{StaticResource True}"
                                Modifiers="Shift" />
                            <KeyBinding Key="Tab" Command="{Binding CompleteQueryCommand}" />
                        </TextBox.InputBindings>
                        <interactivity:Interaction.Triggers>
                            <interactivity:EventTrigger EventName="TextChanged">
                                <interactivity:InvokeCommandAction Command="{Binding SearchCommand}" />
                            </interactivity:EventTrigger>
                            <interactivity:EventTrigger EventName="PreviewKeyDown">
                                <interactivity:InvokeCommandAction
                                    Command="{Binding NavigateCommand}"
                                    EventArgsConverter="{StaticResource KeyToDirectionConverter}"
                                    PassEventArgsToCommand="True" />
                            </interactivity:EventTrigger>
                        </interactivity:Interaction.Triggers>
                    </TextBox>
                    <TextBox
                        BorderThickness="0"
                        Background="Transparent"
                        Panel.ZIndex="0"
                        IsEnabled="False"
                        Visibility="{Binding Query,Converter={StaticResource CmdLineArgumentsToVisibility}}"
                        Text="{Binding Suggestion}" />
                    <ui:SymbolIcon Symbol="Search24" Grid.Row="0" Grid.Column="1" Margin="5,0,15,0"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center" FontSize="37" />
                    <Separator Grid.Row="2" Grid.Column="0" Margin="5,0,5,6" Grid.ColumnSpan="2"
                               Visibility="{Binding Results.Count, Converter={StaticResource IntegerToVisibilityConverter}}" />
                </Grid>
            </StackPanel>

            <!--  RESULT BOX  -->
            <ui:ListView
                x:Name="Result"
                Grid.Row="1"
                MaxHeight="600"
                Margin="15,5,15,0"
                ItemTemplate="{StaticResource QueryResultTemplate}"
                ItemsSource="{Binding Results}"
                ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                SelectedItem="{Binding SelectedResult}"
                SelectionChanged="OnResultSelectionChanged">
                <interactivity:Interaction.Triggers>
                    <interactivity:EventTrigger EventName="PreviewMouseLeftButtonUp">
                        <interactivity:InvokeCommandAction Command="{Binding ExecuteCommand}"
                                                           CommandParameter="{StaticResource False}" />
                    </interactivity:EventTrigger>
                </interactivity:Interaction.Triggers>
            </ui:ListView>

            <!--  STATUS BAR  -->
            <Separator
                Grid.Row="2"
                Margin="5,6,5,2"
                Visibility="{Binding Results.Count, Converter={StaticResource IntegerToVisibilityConverter}}" />


            <Grid Grid.Row="3"
                  Visibility="{Binding Results.Count, Converter={StaticResource IntegerToVisibilityConverter}}"
                  Margin="0,0,15,6">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <DockPanel LastChildFill="True" Grid.Column="0" x:Name="PanelCpu">
                    <ui:TextBlock Text="CPU" Margin="15,0,10,0" FontTypography="Caption" HorizontalAlignment="Right"
                                  Width="30" />
                    <ProgressBar x:Name="CpuProgressBar" Maximum="100" Margin="0,0,5,0" Height="6" />
                </DockPanel>

                <DockPanel LastChildFill="True" Grid.Column="1" x:Name="PanelMemory">
                    <ui:TextBlock Text="Memory" Margin="15,0,5,0" FontTypography="Caption" HorizontalAlignment="Right"
                                  Width="46" />
                    <ProgressBar x:Name="MemoryProgressBar" Minimum="0" Maximum="100" Margin="0,0,10,0" Height="6" />
                </DockPanel>

                <StackPanel Grid.Column="2"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                    <ui:TextBlock
                        FontTypography="Caption"
                        Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                        Opacity="{StaticResource SecondaryTextOpacity}"
                        Text="{Binding Results.Count, StringFormat={}{0} Item(s) found.}" />
                </StackPanel>
            </Grid>
        </Grid>

        <tray:NotifyIcon
            Grid.Row="0"
            FocusOnLeftClick="True"
            Icon="../Assets/appIcon.ico"
            MenuOnRightClick="True"
            TooltipText="Lanceur">
            <tray:NotifyIcon.Menu>
                <ContextMenu>
                    <ContextMenu.Items>
                        <MenuItem Header="Theme">
                            <MenuItem Click="OnClickLightTheme" Header="Light Theme" />
                            <MenuItem Click="OnClickDarkTheme" Header="Dark Theme" />
                        </MenuItem>
                        <MenuItem
                            Click="OnSettingsClick"
                            Header="Show..."
                            Tag="showquery" />
                        <MenuItem
                            Click="OnSettingsClick"
                            Header="Settings..."
                            Tag="settings" />
                        <Separator />
                        <MenuItem
                            Click="OnSettingsClick"
                            Header="Quit"
                            Tag="quit" />
                    </ContextMenu.Items>
                </ContextMenu>
            </tray:NotifyIcon.Menu>
        </tray:NotifyIcon>
    </Grid>
</ui:FluentWindow>